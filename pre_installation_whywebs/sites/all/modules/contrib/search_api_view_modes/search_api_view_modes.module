<?php

/**
 * Implements hook_views_api().
 */
function search_api_view_modes_views_api() {
  if (module_exists('search_api_views')) {
    return array(
      'api' => 3,
    );
  }
}

/**
 * Implements hook_search_api_alter_callback_info().
 * @return mixed
 */
function search_api_view_modes_search_api_alter_callback_info() {
  $callbacks['multiple_entity_views'] = array(
    'name' => t('Multiple entity views'),
    'description' => t('Adds an additional field(s) containing the HTML rendering of each view mode selected.'),
    'class' => 'SearchAPIAlterIndexViewModes',
    'weight' => 100,
  );

  return $callbacks;
}

/**
 * Implements hook_views_data_alter().
 *
 * We need to look through and change the field handler for our stored item to
 * our custom handler so HTML is unescaped.
 *
 * @param array $data
 */
function search_api_view_modes_views_data_alter(array &$data) {
  $indices = search_api_index_load_multiple(FALSE);
  $views_data_keys = array_keys($data);

  if ($indices) {
    foreach (array_keys($indices) as $index) {
      $views_index_name = 'search_api_index_' . $index;

      if (!in_array($views_index_name, $views_data_keys)) {
        continue;
      }

      foreach (array_keys($data[$views_index_name]) as $item) {
        if (preg_match('/view_mode_/', $item)) {
          $data[$views_index_name][$item]['field']['handler'] = 'search_api_view_modes_handler_field_text';
        }
      }
    }
  }
}